state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_contour_filled(data=df[df$z > -50,], aes(x=lon, y=lat, z = z)) +
scale_colour_continuous(palette="RdYlGn") +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_contour_filled(data=df[df$z > -50,], aes(x=lon, y=lat, z = z)) +
scale_colour_continuous(palette="RdYlGn") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_contour_filled(data=df[df$z > -50,], aes(x=lon, y=lat, z = z), alpha=0.7) +
scale_colour_continuous(palette="RdYlGn") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_contour_filled(data=df[df$z > -50,], aes(x=lon, y=lat, z = z), alpha=0.7) +
#scale_colour_continuous(palette="RdYlGn") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_contour_filled(data=df[df$z > -50,], aes(x=lon, y=lat, z = z), alpha=0.7) +
scale_fill_brewer(palette = "Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_contour_filled(data=df[df$z > -50,], aes(x=lon, y=lat, z = z), alpha=0.5) +
scale_fill_brewer(palette = "Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_sf(data=border, size=10, colour="black") +
geom_point(data=Sites, aes(x=Lon, y=Lat, colour=Quality), size=2) +
scale_colour_brewer(palette="Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
geom_text_repel(data=Sites, aes(x=Lon, y=Lat, label=Site),
size=2.5, hjust=0,
xlim = c(-130, -127), force=5,
direction="y", box.padding=0.15)+
coord_sf(xlim=-c(131, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", colour="Quality:") +
theme_bw() +
ggtitle("Cascadia Subsidence Data - Locations and Quality") +
theme(legend.position="top", legend.margin=margin(t = 0, unit='cm'),
plot.title = element_text(hjust = 0.5))
ggsave(file="Subsidence.png", path="Plots/", height=6, width=6)
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_contour_filled(data=df[df$z > -50,], aes(x=lon, y=lat, z = z), alpha=0.5) +
scale_fill_brewer(palette = "Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_contour_filled(data=df[df$z > -50,], aes(x=lon, y=lat, z = z), alpha=0.6) +
scale_fill_brewer(palette = "Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
depth_df$z <- abs(depth_df$z)
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_contour_filled(data=df[,], aes(x=lon, y=lat, z = z), alpha=0.6) +
scale_fill_brewer(palette = "Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_contour_filled(data=df[,], aes(x=lon, y=lat, z = z), alpha=0.6) +
scale_fill_brewer(palette = "Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 118), ylim=c(35, 55))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_contour_filled(data=df[df$z < 50,], aes(x=lon, y=lat, z = z), alpha=0.6) +
scale_fill_brewer(palette = "Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
border <- read_sf('Data/Border/Canada_and_US_Border.shp')
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_sf(data=border, size=10, colour="black") +
geom_contour_filled(data=df[df$z < 50,], aes(x=lon, y=lat, z = z), alpha=0.6) +
scale_fill_brewer(palette = "Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Slab2", varName, "- Cascadia"))
}
plotGrid(depth_df, "Depth (km)")
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_sf(data=border, size=10, colour="black") +
geom_point(data=Sites, aes(x=Lon, y=Lat, colour=Quality), size=2) +
scale_colour_brewer(palette="Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
geom_text_repel(data=Sites, aes(x=Lon, y=Lat, label=Site),
size=2.5, hjust=0,
xlim = c(-130, -127), force=5,
direction="y", box.padding=0.15)+
coord_sf(xlim=-c(131, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", colour="Quality:") +
theme_bw() +
ggtitle("Cascadia Subsidence Data - Locations and Quality") +
theme(legend.position="top", legend.margin=margin(t = 0, unit='cm'),
plot.title = element_text(hjust = 0.5))
source("~/Uni/NTNU/Masters Project/RProj/Code/Slab2-Map.R", echo=TRUE)
ggsave(file="slab2-depth.png", path="Plots/", height=6, width=6)
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
border <- read_sf('Data/Border/Canada_and_US_Border.shp')
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_sf(data=border, size=10, colour="black") +
geom_contour_filled(data=df[df$z < 50,], aes(x=lon, y=lat, z = z), alpha=0.6) +
scale_fill_brewer(palette = "Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Cascadia Slab2 Data -", varName))
}
plotGrid(depth_df, "Depth (km)")
ggsave(file="slab2-depth.png", path="Plots/", height=6, width=6)
plotGrid <- function(df, varName){
state_names <- data.frame(Lon = c(-121, -121, -121, -121.5),
Lat = c(41, 44, 47.5, 50),
State = c("California", "Oregon", "Washington", "British Columbia"))
country_names <- data.frame(Lon=c(-119.5, -119.5),
Lat=c(49.2, 48.8),
Country=c("Canada", "USA"))
border <- read_sf('Data/Border/Canada_and_US_Border.shp')
ggplot() +
geom_sf(data = us_states, fill = "white", colour="black") +
geom_sf(data = canada_prov, fill = "white", colour="black") +
geom_sf(data=border, size=10, colour="black") +
geom_contour_filled(data=df[depth_df$z < 50,], aes(x=lon, y=lat, z = z), alpha=0.6) +
scale_fill_brewer(palette = "Spectral") +
geom_text(data=state_names, aes(x=Lon, y=Lat, label=State), size=2.5) +
geom_text(data=country_names, aes(x=Lon, y=Lat, label=Country), size=3, hjust=1) +
coord_sf(xlim=-c(130, 120), ylim=c(40, 50))+
labs(x = "Longitude", y = "Latitude", fill=varName) +
theme_bw() +
ggtitle(paste("Cascadia Slab2 Data -", varName))
}
plotGrid(unc_df, "Uncertainty (km)")
ggsave(file="slab2-uncertainty.png", path="Plots/", height=6, width=6)
source("~/Uni/NTNU/Masters Project/RProj/Code/Setup.R", echo=TRUE)
install.packages("colorspace")
install.packages("ggplot2")
source("~/Uni/NTNU/Masters Project/RProj/Code/okada.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/okada.R")
source("~/Uni/NTNU/Masters Project/RProj/Code/Setup.R")
source("~/.active-rstudio-document", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/slab.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/Setup.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/slab.R", echo=TRUE)
loadSlab2()
source("~/Uni/NTNU/Masters Project/RProj/Code/slab.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/slab.R", echo=TRUE)
loadSlab2()
fault <- loadSlab2()
plot(fault$depth)
plot(fault$depth, fault$lon)
plot(fault$lon, fault$depth)
out = discretizeSlab2()
source("~/.active-rstudio-document", echo=TRUE)
# obtain okada model predictions for the first test triangular subfault
testTri1 = function() {
# get the subfault. It must contain the following:
#     fix_orientation: whether the orientation is fixed. Set by
#                      calculate_geometry_triangles
#     corners: 3x3 matrix where each row is (lon, lat, depth) of a single corner
#     centers: TODO
#     lon: longitude TODO
#     lat: latitude TODO
#     depth: depth TODO
#     strike: strike TODO
#     dip: dip TODO
#     slip: average coseismic slip for the subfault
#     rake: rake of the subfault
tri1 = getTestTriangularSubfaults()$tri1
triGeom = calculate_geometry_triangles(tri1)
# set test points
lonTest = c(-124.2, -124.1)
latTest = c(40.15, 40.30)
# run okada model
dtopo = okadaSubfaultTri(triGeom, x=lonTest, y=latTest)
# plot results
xlim = range(triGeom$corners[,1])
ylim = range(triGeom$corners[,2])
plotWithColor(triGeom$corners[,1], triGeom$corners[,2], triGeom$corners[,3], main="depth",
xlim=xlim, ylim=ylim, pch=19)
plotWithColor(c(dtopo$X), c(dtopo$Y), c(dtopo$dX), main="dx",
xlim=xlim, ylim=ylim, pch=19)
points(triGeom$corners[,1], triGeom$corners[,2])
plotWithColor(c(dtopo$X), c(dtopo$Y), c(dtopo$dY), main="dy",
xlim=xlim, ylim=ylim, pch=19)
points(triGeom$corners[,1], triGeom$corners[,2])
plotWithColor(c(dtopo$X), c(dtopo$Y), c(dtopo$dZ), main="dz",
xlim=xlim, ylim=ylim, pch=19)
points(triGeom$corners[,1], triGeom$corners[,2])
# do the results change after reordering the corners?
tri12 = tri1
tri12 = tri12[c(2, 3, 1),]
triGeom2 = calculate_geometry_triangles(tri12)
dtopo2 = okadaSubfaultTri(triGeom2, x=lonTest, y=latTest)
browser()
triGeom
triGeom2
dtopo
dtopo2
}
testTri1()
source("~/Uni/NTNU/Masters Project/RProj/Code/Setup.R", echo=TRUE)
install.packages("pracma")
source("~/Uni/NTNU/Masters Project/RProj/Code/okada.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/utilityFuns.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/slab.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/genericSpatialPlottingFunctions.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/loadSubDat.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/plotter.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/plotter.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R", echo=TRUE)
testTri1()
testTri1()
testTri1()
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R", echo=TRUE)
testTri1()
source("~/Uni/NTNU/Masters Project/RProj/Code/okada.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/okada.R", echo=TRUE)
testTri1()
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R", echo=TRUE)
testTri1()
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R", echo=TRUE)
testTri1()
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R", echo=TRUE)
testTri1()
testFullFault()
library(sf)
testFullFault()
library(INLA)
install.packages("INLA")
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
testFullFault()
library(INLA)
remotes::install_version("INLA", version="23.05.30",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/testing"), dep=TRUE)
remotes::install_version("INLA", version="23.05.30",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/testing"), dep=TRUE)
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(devtools)
devtools::install_github(repo = "https://github.com/hrue/r-inla", ref = "stable", subdir = "rinla", build = FALSE)
library("INLA")
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R", echo=TRUE)
testFullFault()
library(INLA)
testFullFault()
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
install.package("fmesher")
install.packages("fmesher")
install.packages("Rtools")
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("fmesher")
library(fmesher)
source("~/Uni/NTNU/Masters Project/RProj/Code/slab.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/okada.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/utilityFuns.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/genericSpatialPlottingFunctions.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/loadSubDat.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/plotter.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/slab.R", echo=TRUE)
testFullFault()
source("~/Uni/NTNU/Masters Project/RProj/Code/slab.R", echo=TRUE)
testFullFault()
source("~/Uni/NTNU/Masters Project/RProj/Code/Setup.R", echo=TRUE)
# load required packages and R scripts
library(Matrix)
library(latex2exp)
# load required packages and R scripts
library(Matrix)
library(spam)
library(fields)
library(latex2exp)
library(xtable)
library(profvis)
library(viridis)
library(numDeriv)
library(data.table)
library(abind)
library(devtools)
library(ggplot2)
library(colorspace)
library(TMB)
library(plyr)
library(INLA)
library(sf)
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
library(sf)
library(ncdf4)
library(pracma)
library(concaveman)
library(devtools)
library(fmesher)
testFullFault()
source("~/Uni/NTNU/Masters Project/RProj/Code/slab.R", echo=TRUE)
testFullFault()
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/testing"), dep=TRUE)
library(INLA)
source("~/Uni/NTNU/Masters Project/RProj/Code/Setup.R", echo=TRUE)
install.packages("Matrix")
install.packages("colorspace")
install.packages("ggplot2")
install.packages("sf")
install.packages("colorspace")
install.packages("sf")
install.packages("ggplot2")
install.packages("Matrix")
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R", echo=TRUE)
testFullFault()
testFullFault()
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R")
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R")
testFullFault()
source("~/Uni/NTNU/Masters Project/RProj/Code/test.R")
