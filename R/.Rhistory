if (projection == "UTM"){
grid = toUTM(grid)
limits = toUTM(limits)
}
grid = data.frame(X = c(st_coordinates(grid)[,1]),
Y = c(st_coordinates(grid)[,2]),
Z = grid$z)
g +
metR::geom_contour_fill(data=grid, aes(x=X, y=Y, z = Z), alpha=0.65, bins=100) +
scale_fill_distiller(palette = "OrRd", direction=1,
name = "Depth (km)") +
theme(legend.position = "right",
legend.key.height = unit(3, 'cm')) +
coord_sf(xlim=c(st_coordinates(limits)[,1]), ylim=c(st_coordinates(limits)[,2]))
# g +
#   geom_sf(data=grid, aes(colour=z)) +
#   scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
#   theme(legend.position = "right", legend.key.height = unit(3, 'cm')) +
#   coord_sf(xlim=c(st_coordinates(limits)[,1]), ylim=c(st_coordinates(limits)[,2]))
}
plotGrid()
plotGrid(projection="UTM")
plotGrid(projection="UTM")
plotGrid()
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2, projection=projection)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
if (projection == "UTM"){
grid = toUTM(grid)
limits = toUTM(limits)
}
grid = data.frame(X = c(st_coordinates(grid)[,1]),
Y = c(st_coordinates(grid)[,2]),
Z = grid$z)
g +
metR::geom_contour_fill(data=grid, aes(x=X, y=Y, z = Z), alpha=0.65, bins=100) +
scale_fill_distiller(palette = "OrRd", direction=1,
name = "Depth (km)") +
theme(legend.position = "right",
legend.key.height = unit(3, 'cm')) +
coord_sf(xlim=c(st_coordinates(limits)[,1]), ylim=c(st_coordinates(limits)[,2]))
# g +
#   geom_sf(data=grid, aes(colour=z)) +
#   scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
#   theme(legend.position = "right", legend.key.height = unit(3, 'cm')) +
#   coord_sf(xlim=c(st_coordinates(limits)[,1]), ylim=c(st_coordinates(limits)[,2]))
}
plotGrid(projection="UTM")
grid = readGrid("depth")
grid = grid[grid$z > -30, ]
grid = toUTM(grid)
grid
grid = data.frame(X = c(st_coordinates(grid)[,1]),
Y = c(st_coordinates(grid)[,2]),
Z = grid$z)
grid
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2, projection=projection)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
if (projection == "UTM"){
grid = toUTM(grid)
limits = toUTM(limits)
}
grid = data.frame(X = c(st_coordinates(grid)[,1]),
Y = c(st_coordinates(grid)[,2]),
Z = grid$z)
g +
metR::geom_contour_fill(data=grid, aes(x=X, y=Y, z = Z), alpha=0.65, bins=5) +
scale_fill_distiller(palette = "OrRd", direction=1,
name = "Depth (km)") +
theme(legend.position = "right",
legend.key.height = unit(3, 'cm')) +
coord_sf(xlim=c(st_coordinates(limits)[,1]), ylim=c(st_coordinates(limits)[,2]))
# g +
#   geom_sf(data=grid, aes(colour=z)) +
#   scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
#   theme(legend.position = "right", legend.key.height = unit(3, 'cm')) +
#   coord_sf(xlim=c(st_coordinates(limits)[,1]), ylim=c(st_coordinates(limits)[,2]))
}
plotgrid(projection="UTM")
plotGrid(projection="UTM")
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2, projection=projection)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
if (projection == "UTM"){
grid = toUTM(grid)
limits = toUTM(limits)
}
grid = data.frame(X = c(st_coordinates(grid)[,1]),
Y = c(st_coordinates(grid)[,2]),
Z = grid$z)
g +
geom_sf(data=grid, aes(colour=z)) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm')) +
coord_sf(xlim=c(st_coordinates(limits)[,1]), ylim=c(st_coordinates(limits)[,2]))
}
plotGrid(projection="UTM")
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2, projection=projection)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
if (projection == "UTM"){
grid = toUTM(grid)
limits = toUTM(limits)
}
g +
geom_sf(data=grid, aes(colour=z)) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm')) +
coord_sf(xlim=c(st_coordinates(limits)[,1]), ylim=c(st_coordinates(limits)[,2]))
}
plotGrid(projection="UTM")
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2, projection=projection)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
if (projection == "UTM"){
grid = toUTM(grid)
limits = toUTM(limits)
}
g +
geom_sf(data=grid, aes(color=z)) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm')) +
coord_sf(xlim=c(st_coordinates(limits)[,1]), ylim=c(st_coordinates(limits)[,2]))
}
plotGrid(projection="UTM")
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)#, projection=projection)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
g = g +
geom_sf(data=grid, aes(color=z)) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
if (projection == "UTM"){
# grid = toUTM(grid)
# limits = toUTM(limits)
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
}
plotGrid()
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)#, projection=projection)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
g = g +
geom_sf(data=grid, aes(color=z)) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
if (projection == "UTM"){
# grid = toUTM(grid)
# limits = toUTM(limits)
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotGrid()
plotGrid(projection="UTM")
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)#, projection=projection)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
g = g +
geom_sf(data=grid, aes(color=z)) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
if (projection == "UTM"){
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
limits = toUTM(limits)
g = g + coord_sf(xlim = c(st_coordinates(limits)[,1]), ylim = c(st_coordinates(limits)[,2]), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotGrid(projection="UTM")
source("~/Uni/NTNU/Masters Project/CSZ/R/Code/baseMap.R", echo=TRUE)
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
g = g +
geom_sf(data=grid, aes(color=z)) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
if (projection == "UTM"){
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
limits = toUTM(limits)
g = g + coord_sf(xlim = c(st_coordinates(limits)[,1]), ylim = c(st_coordinates(limits)[,2]), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotGrid()
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
contours = st_contour(grid)
# g = g +
#   geom_sf(data=grid, aes(color=z)) +
#   scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
#   theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
g = g +
geom_sf(contours) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
# set the map in the ocrrect projection
# works because everything is an sf object
if (projection == "UTM"){
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
limits = toUTM(limits)
g = g + coord_sf(xlim = c(st_coordinates(limits)[,1]), ylim = c(st_coordinates(limits)[,2]), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotGrid()
?st_contour
??st_contour
install.packages("stars")
library(stars)#
library(stars)
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
contours = st_contour(grid)
# g = g +
#   geom_sf(data=grid, aes(color=z)) +
#   scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
#   theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
g = g +
geom_sf(contours) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
# set the map in the ocrrect projection
# works because everything is an sf object
if (projection == "UTM"){
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
limits = toUTM(limits)
g = g + coord_sf(xlim = c(st_coordinates(limits)[,1]), ylim = c(st_coordinates(limits)[,2]), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotGrid()
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
contours = st_contour(grid)
# g = g +
#   geom_sf(data=grid, aes(color=z)) +
#   scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
#   theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
g = g +
geom_sf(data=contours) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
# set the map in the correct projection
# works because everything is an sf object
if (projection == "UTM"){
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
limits = toUTM(limits)
g = g + coord_sf(xlim = c(st_coordinates(limits)[,1]), ylim = c(st_coordinates(limits)[,2]), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotGrid()
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
contours = st_contour(st_as_stars(grid))
# g = g +
#   geom_sf(data=grid, aes(color=z)) +
#   scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
#   theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
g = g +
geom_sf(data=contours) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
# set the map in the correct projection
# works because everything is an sf object
if (projection == "UTM"){
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
limits = toUTM(limits)
g = g + coord_sf(xlim = c(st_coordinates(limits)[,1]), ylim = c(st_coordinates(limits)[,2]), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotgrid()
plotGrid()
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
g = g +
geom_sf(data=grid, aes(color=z)) +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
# set the map in the correct projection
# works because everything is an sf object
if (projection == "UTM"){
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
limits = toUTM(limits)
g = g + coord_sf(xlim = c(st_coordinates(limits)[,1]), ylim = c(st_coordinates(limits)[,2]), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotGrid()
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
g = g +
geom_sf(data=grid, aes(color=z), stat="contour") +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
# set the map in the correct projection
# works because everything is an sf object
if (projection == "UTM"){
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
limits = toUTM(limits)
g = g + coord_sf(xlim = c(st_coordinates(limits)[,1]), ylim = c(st_coordinates(limits)[,2]), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotGrid()
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
g = g +
geom_sf(data=grid, stat="contour_filled") +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
# set the map in the correct projection
# works because everything is an sf object
if (projection == "UTM"){
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
limits = toUTM(limits)
g = g + coord_sf(xlim = c(st_coordinates(limits)[,1]), ylim = c(st_coordinates(limits)[,2]), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotGrid()
plotGrid <- function(varName = "depth", projection="NULL"){
# gets the base map in given projection
g = plotBase(scale=2)
# read in the slab2 data for depth
grid = readGrid(varName)
# limit the depth
if (varName == "depth"){
grid = grid[grid$z > -30,]
}
g = g +
geom_sf(data=grid, aes(color=z), stat="contour_filled") +
scale_fill_distiller(palette = "OrRd", direction=1, name = "Depth (km)") +
theme(legend.position = "right", legend.key.height = unit(3, 'cm'))
# set the map in the correct projection
# works because everything is an sf object
if (projection == "UTM"){
limits = data.frame(x = -c(130, 120), y = c(40, 50))
limits = st_as_sf(x=limits, coords = c("x", "y"), crs=st_crs("EPSG:4326"))
limits = toUTM(limits)
g = g + coord_sf(xlim = c(st_coordinates(limits)[,1]), ylim = c(st_coordinates(limits)[,2]), crs=st_crs("EPSG:32610"))
}
else{
g = g + coord_sf(xlim = -c(130, 120), ylim = c(40, 50), crs=st_crs("EPSG:4326"))
}
g
}
plotgrid()
plotGrid()
