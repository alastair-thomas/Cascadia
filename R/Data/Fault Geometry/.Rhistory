install.packages('class')
install.packages('class')
install.packages('caret')
source("~/Uni/Year4/Statistical Case Studies/Project 2a/stylometryfunctions.R", echo=TRUE)
install.packages(ggplot2)
source("~/Uni/Year4/Statistical Case Studies/Project 2a/stylometryfunctions.R", echo=TRUE)
source("~/Uni/Year4/Statistical Case Studies/Project 2a/stylometryfunctions.R", echo=TRUE)
source("~/Uni/Year4/Statistical Case Studies/Project 2a/TestModels.R", echo=TRUE)
2+2
print('hello')
x <- 5
x
x + 3
x**2
x/2
clear(x)
print("hello world")
print("hello world")
source("~/Uni/NTNU/Time Series/Exercise2.R", echo=TRUE)
source("~/Uni/NTNU/Time Series/Exercise2.R", echo=TRUE)
source("~/Uni/NTNU/Time Series/Exercise2.R")
plot(x,s)
source("~/.active-rstudio-document", echo=TRUE)
plot(x,s)+
labs(xlab="Location", s="Observation")
plot(x,s)+
title(xlab="Location", s="Observation")
plot(x,s)+
title(xlab="Location", y="Observation")
plot(x,s, xlab="Location", y="Observation")
plot(x,s, xlab="Location", ylab="Observation")
plot(x, s,
title = "Simple Kriging Example"
xlab="Location", ylab="Observation")
plot(x, s,
main="Simple Kriging Example"
xlab="Location", ylab="Observation")
plot(x, s,
main="Simple Kriging Example",
xlab="Location", ylab="Observation")
plot(x, s,
main="Simple Kriging Example",
xlab="Location", ylab="Observation",
pch=19)
plot(s, x,
main="Simple Kriging Example",
xlab="Location", ylab="Observation",
pch=19)
plot(s, x,
xlim=c(0,10), ylim=c(-3,3),
main="Simple Kriging Example",
xlab="Location", ylab="Observation",
pch=19)
dyn.load?
load("~/Uni/NTNU/Masters Project/CSZ/R/Data/Subsidence/DR1.RData")
View(dr1)
View(dr1)
1.5/2.2
(1.5/2.2) * 0.005
(1.7/2.8)*0.0036
40.86 - 0.002185714
124.108 + (1.6/2.2)*0.005
124.108 - (1.7/2.2)*0.005
124.108 - (1.5/2.2)*0.005
124.108 + (1.5/2.2)*0.005
124.108 - (1.7/2.2)*0.005
40.86 + (0.1/2.8)*0.0036
124.103 - (0.7/6.8)*0.005
40.86 + (0.7/6.3)*0.0036
View(dr1)
View(dr1)
print(colnames(dr1))
Region = rep("California", 3)
Site = rep("Humboldt Bay", 3)
Lat = c(40.858, 40.860, 40.860)
Lon = c(-124.111, -124.104, -124.103)
event = c("T1", "T3", "T5")
subsidence = c(0.85, 0.42, 0.79)
Uncertainty = c(0.46, 0.37, 0.47)
source = rep(49, 3)
quality = rep(1, 3)
cbind((Region, Site, Lon, Lat))
cbind(Region, Site)
dr2 = data.frame(cbind(Region, Site,
Lat, Lon,
event,
subsidence, Uncertainty,
source, quality))
View(dr2)
dr3 = rbind(dr1, dr2, fill=TRUE)
dr3 = data.frame(rbind(data.table(dr1), data.table(dr2), fill=TRUE))
table(dr1)
dr3 = rbind(dr1, dr2, fill=TRUE)
library(dplyr)
dr3 = bind_rows(dr1, dr2)
Lat = as.double(c(40.858, 40.860, 40.860))
Lon = as.double(c(-124.111, -124.104, -124.103))
dr2 = data.frame(cbind(Region, Site,
Lat, Lon,
event,
subsidence, Uncertainty,
source, quality))
dr3 = bind_rows(dr1, dr2)
dr2
setwd("~/Uni/NTNU/Masters Project/CSZ/R/Data/Fault Geometry")
load("fault.RData")
length(triGeomFull)
source("~/Uni/NTNU/Masters Project/CSZ/R/Code/plotter.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/CSZ/R/Code/Setup.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/CSZ/R/Code/utilityFuns.R", echo=TRUE)
plotFault(triGeomFull)
?inla.mesh.2d
test=discretizeslab2(max.edge=c(15,1000), cutoff=5)
source("~/Uni/NTNU/Masters Project/CSZ/R/Code/slab.R", echo=TRUE)
test=discretizeslab2(max.edge=c(15,1000), cutoff=5)
test=discretizeSlab2(max.edge=c(15,1000), cutoff=5)
plot(test$mesh)
test = getFullFaultGeom(max.edge=c(15,100), cutoff=5)
source("~/Uni/NTNU/Masters Project/CSZ/R/Code/okada.R", echo=TRUE)
source("~/Uni/NTNU/Masters Project/CSZ/R/Code/utilityFuns.R", echo=TRUE)
test = getFullFaultGeom(max.edge=c(15,100), cutoff=5)
plotFault(test)
length(test)
fullFault = test
depths = rep(0, length(fullFault))
for (i in 1:length(fullFault)){
depths[i] = fullFault[[i]]$depth
}
plotFault(fullFault, z=depths)
depths = rep(0, length(fullFault))
for (i in 1:length(fullFault)){
depths[i] = -fullFault[[i]]$depth / (10^3)
}
plotFault(fullFault, z=depths, legendTitle="Depth (km)")
setwd("~/Uni/NTNU/Masters Project/CSZ/R/Data/Fault Geometry")
save(fullFault, file="fullFault.RData")
